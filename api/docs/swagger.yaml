basePath: /
definitions:
  apiv1.User:
    properties:
      account:
        type: string
      apples:
        type: integer
      bananas:
        type: integer
      created_at:
        type: string
      email:
        type: string
      gender:
        type: integer
      gender_str:
        type: string
      id:
        type: integer
      last_sign_in:
        type: string
      nation_code:
        type: string
      nickname:
        type: string
      phone:
        type: string
      profile:
        type: string
      whats_up:
        type: string
    type: object
  apiv1.UserUpdateRequest:
    properties:
      account:
        type: string
      gender:
        type: integer
      nickname:
        type: string
      profile:
        type: string
      whats_up:
        type: string
    type: object
  book.Chapter:
    properties:
      bid:
        type: integer
      id:
        type: integer
      summary:
        type: string
      title:
        type: string
    type: object
  book.Section:
    properties:
      bananas:
        type: integer
      bid:
        type: integer
      cid:
        type: integer
      content_id:
        type: integer
      created_at:
        type: integer
      id:
        type: integer
      idx:
        type: integer
      publish_time:
        type: integer
      status:
        type: integer
      title:
        type: string
      updated_at:
        type: integer
      wordnum:
        type: integer
    type: object
  book.Tag:
    properties:
      id:
        type: integer
      name:
        type: string
      status:
        type: integer
    type: object
  services.SBook:
    properties:
      aid:
        type: integer
      apples:
        type: integer
      category_id:
        type: integer
      category_str:
        type: string
      clicks:
        type: integer
      comments:
        type: integer
      cover:
        type: string
      created_at:
        type: integer
      created_at_str:
        type: string
      favorites:
        type: integer
      hot:
        type: integer
      id:
        type: integer
      is_pay:
        type: integer
      is_pay_str:
        type: string
      last_section:
        allOf:
        - $ref: '#/definitions/book.Section'
        description: 最新章节
      last_section_id:
        type: integer
      last_section_time:
        type: integer
      likes:
        type: integer
      popular:
        type: integer
      process:
        type: integer
      process_str:
        type: string
      section_num:
        type: integer
      status:
        type: integer
      status_str:
        type: string
      summary:
        type: string
      tag_ids:
        type: string
      tag_ids_arr:
        items:
          $ref: '#/definitions/book.Tag'
        type: array
      title:
        type: string
      updated_at:
        type: integer
      updated_at_str:
        type: string
    type: object
  services.SCategory:
    properties:
      childs:
        items:
          $ref: '#/definitions/services.SCategory'
        type: array
      id:
        type: integer
      name:
        type: string
      parent:
        $ref: '#/definitions/services.SCategory'
    type: object
  services.SSection:
    properties:
      bananas:
        type: integer
      bid:
        type: integer
      chapter:
        $ref: '#/definitions/book.Chapter'
      cid:
        type: integer
      content:
        type: string
      content_id:
        type: integer
      created_at:
        type: integer
      created_at_str:
        type: string
      id:
        type: integer
      idx:
        type: integer
      publish_time:
        type: integer
      publish_time_str:
        type: string
      status:
        type: integer
      status_str:
        type: string
      title:
        type: string
      updated_at:
        type: integer
      updated_at_str:
        type: string
      wordnum:
        type: integer
    type: object
  services.STag:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: 127.0.0.1:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: 图书阅读器 API
  version: "1.0"
paths:
  /apiv1/book/{id}:
    get:
      parameters:
      - description: 图书id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/services.SBook'
        "400":
          description: 请求错误
          schema:
            type: string
        "500":
          description: 内部错误
          schema:
            type: string
      summary: 获取图书详情
      tags:
      - book
  /apiv1/book/catalog/{bid}:
    get:
      parameters:
      - description: 图书id
        in: path
        name: bid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            items:
              $ref: '#/definitions/services.SSection'
            type: array
        "400":
          description: 请求错误
          schema:
            type: string
        "500":
          description: 内部错误
          schema:
            type: string
      summary: 获取图书目录
      tags:
      - book
  /apiv1/book/categories:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            items:
              $ref: '#/definitions/services.SCategory'
            type: array
        "400":
          description: 请求错误
          schema:
            type: string
        "500":
          description: 内部错误
          schema:
            type: string
      summary: 获取小说分类
      tags:
      - book
  /apiv1/book/section/{bid}/{sid}:
    get:
      parameters:
      - description: 图书id
        in: path
        name: bid
        required: true
        type: integer
      - description: 小节id
        in: path
        name: sid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            items:
              $ref: '#/definitions/services.SSection'
            type: array
        "400":
          description: 请求错误
          schema:
            type: string
        "500":
          description: 内部错误
          schema:
            type: string
      summary: 获取章节内容
      tags:
      - book
  /apiv1/book/tags:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            items:
              $ref: '#/definitions/services.STag'
            type: array
        "400":
          description: 请求错误
          schema:
            type: string
        "500":
          description: 内部错误
          schema:
            type: string
      summary: 获取小说分类
      tags:
      - book
  /apiv1/user:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/apiv1.User'
        "400":
          description: 请求错误
          schema:
            type: string
        "500":
          description: 内部错误
          schema:
            type: string
      summary: 获取用户信息
      tags:
      - user
  /apiv1/user/update:
    post:
      consumes:
      - application/json
      parameters:
      - description: 修改数据
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/apiv1.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/apiv1.User'
        "400":
          description: 请求错误
          schema:
            type: string
        "500":
          description: 内部错误
          schema:
            type: string
      summary: 修改数据
      tags:
      - user
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
